Linhas de comando para funcionamento do Arduino

----------

Fase 1 - gravando frases no Arduino (teste pelo Tinkercad)

/**
  Hello world
  @author Professor José de Assis
*/

void setup() {
  Serial.begin(9600);          //iniciar a comunicação serial
  Serial.print("Hello World"); //escreve um texto no Terminal
}

void loop() {
  // put your main code here, to run repeatedly:
}

----------

Fase 2 - gerando repetição da frase criada - erro na linha de comando (teste pelo Tinkercad)

/**
  Hello world
  @author Professor José de Assis
*/

void setup() {
  Serial.begin(9600);          //iniciar a comunicação serial
}

void loop() {
  Serial.print("Hello World"); //escreve um texto no Terminal
}

----------

Fase 3 - gerando repetição da frase criada - linha de comando completa (teste pelo Tinkercad)

/**
  Hello world
  @author Professor José de Assis
*/

void setup() {
  Serial.begin(9600);          //iniciar a comunicação serial
}

void loop() {
  Serial.println("Hello World"); //escreve um texto no Terminal
}

----------

Fase 4 - configurando a conexão do Arduino para ativação do LED

/**
  Piscar LED
  @author Professor José de Assis
*/

void setup() {
  pinMode(13, OUTPUT);          //configurando o pino 13 como saída
}

void loop() {
  digitalWrite(13, HIGH); //ativar o pino 13
}

----------

Fase 5 - configurando a conexão do Arduino para inativação do LED

/**
  Piscar LED
  @author Professor José de Assis
*/

void setup() {
  pinMode(13, OUTPUT);          //configurando o pino 13 como saída
}

void loop() {
  //digitalWrite(13, HIGH); //ativar o pino 13
  digitalWrite(13, LOW);   //desativar o pino 13
}

----------

Fase 6 - configurando a conexão do Arduino para o LED piscar com intervalo de 1s

/**
  Piscar LED
  @author Professor José de Assis
*/

void setup() {
  pinMode(13, OUTPUT);          //configurando o pino 13 como saída
}

void loop() {
  digitalWrite(13, HIGH); //ativar o pino 13
  delay(1000);            //1000ms = 1s  
  digitalWrite(13, LOW);  //desativar o pino 13
  delay(1000);            //1000ms = 1s
}
